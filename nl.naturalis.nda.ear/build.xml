<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:if="ant:if" xmlns:unless="ant:unless" basedir="." name="nl.naturalis.nda.ear" default="build">

	<import file="../nl.naturalis.nda.build/properties.xml" />
	<import file="../nl.naturalis.nda.build/common.xml" />
	<property file="../nl.naturalis.nda.build/build.properties" />
	<property environment="env" />

	<!-- Build referenced projects -->
	<target name="projects">
		<echo message="Building referenced projects for ${ant.project.name}" />
		<ant antfile="${domain.module.location}/build.xml" useNativeBasedir="true" inheritrefs="true" />
		<ant antfile="${dao.module.location}/build.xml" useNativeBasedir="true" inheritrefs="true" />
		<ant antfile="${ejb.module.location}/build.xml" useNativeBasedir="true" inheritrefs="true" />
		<ant antfile="${rest.module.location}/build.xml" useNativeBasedir="true" inheritrefs="true" />
	</target>

	<!-- Directory into which to collect the contents of the ear file -->
	<property name="assemblydir" location="${basedir}/build/assemble" />

	<!-- Collect stuff for ear file -->
	<target name="assemble">
		<echo message="Collecting files for ear file" />
		<mkdir dir="${assemblydir}" />
		<mkdir dir="${assemblydir}/META-INF" />
		<mkdir dir="${assemblydir}/lib" />
		<copy file="${domain.module.location}/build/${domain.module.artifact}" todir="${assemblydir}/lib" />
		<copy file="${dao.module.location}/build/${dao.module.artifact}" todir="${assemblydir}/lib" />
		<copy file="${ejb.module.location}/build/nl.naturalis.nda.ejb.jar" todir="${assemblydir}" />
		<copy file="${rest.module.location}/build/nl.naturalis.nda.service.rest.war" todir="${assemblydir}" />
		<copy todir="${assemblydir}/lib">
			<fileset dir="${domain.module.location}/build/classpath" />
			<fileset dir="${dao.module.location}/build/classpath" />
			<fileset dir="${ejb.module.location}/build/classpath" />
			<fileset dir="${rest.module.location}/build/classpath" />
		</copy>
		<copy todir="${assemblydir}/META-INF">
			<fileset dir="EarContent/META-INF" />
		</copy>
	</target>

	<!-- Export ear file, but only if it does not exist already -->
	<target name="build" depends="git.info" unless:set="${ant.project.name}.packaged">
		<property name="earfile" value="build/nba.${git.branch}.${git.revision}.ear" />
		<available file="${earfile}" property="${ant.project.name}.packaged" />
		<echo if:set="${ant.project.name}.packaged" message="${ant.project.name} already built for branch ${git.branch}. Clean project to force rebuild." />
		<echo unless:set="${ant.project.name}.packaged" message="*************** [ Building ${ant.project.name} ] ***************" />
		<antcall target="projects" unless:set="${ant.project.name}.packaged" />
		<antcall target="assemble" unless:set="${ant.project.name}.packaged" />
		<jar destfile="${earfile}" basedir="${assemblydir}" unless:set="${ant.project.name}.packaged" />
	</target>

	<target name="rebuild" depends="clean,build" />

	<target name="eclipse">
		<delete file=".settings/org.eclipse.wst.common.project.facet.core.xml" failonerror="false" if:set="signal.clean" />
		<delete file=".settings/org.eclipse.wst.common.project.facet.core.xml" failonerror="false" if:set="signal.pristine" />
		<antcall target="templates" />
	</target>

</project>
